{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","second.js","reportWebVitals.js","fonts/RenoMono.otf","fonts/upheavtt.ttf","fonts.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","FZTOKEN","TOKEN","smartToken","on","updateAccount","location","reload","userchain","CHID","utils","toHex","toString","params","chainId","code","NAME","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","AmountContainer","TextTitle","p","TextSub","TextTotal","TextSubTitle","TextDescription","TEXTamount","StyledLink","hr","Icons","img","HeaderDiv","socialDiv","Headerlinks","SecContainer","TextP","CBOX","button","StyledButton","CTNButton","Maxbtn","StyledRoundButton","LogoDiv","ResponsiveWrapper","ResponsiveWrapperHeader","StyledLogo","StyledImg","WalletBox","App","useDispatch","useSelector","useState","walletAddress","setAddress","claimingNft","setClaimingNft","feedback","setFeedback","tokens","settokens","brd","setbrd","bxsh","setbxsh","DOT","setDOT","React","placement","errmessage","Notification","header","closable","txmessage","mntmessage","Loader","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","DISPLAY_COST","WL_Display","GAS_LIMIT","MAX_PER_TX","MARKETPLACE","MARKETPLACE_LINK","Telegram","Discord","Twitter","SHOW_BACKGROUND","SET_CONFIG","getData","substring","getConfig","config","useEffect","style","backgroundColor","href","target","alt","src","fontSize","color","Badge","padding","Number","textAlign","fontFamily","background","borderRadius","onClick","e","preventDefault","width","paddingLeft","border","boxShadow","lineHeight","disabled","newtokens","decrementtokens","incrementtokens","price","toWei","gasLimit","totalGasLimit","String","toaster","push","mint","send","to","from","value","once","err","then","receipt","claimNFTs","speed","content","id","Carousel","autoplay","className","PanelGroup","borderColor","accordion","bordered","Panel","defaultExpanded","Second","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","Upheaval","RenoMono","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46491177.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\n\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n            const FZTOKEN = new Web3EthContract(\r\n              abi,\r\n              CONFIG.TOKEN\r\n            );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              smartToken: FZTOKEN ,\r\n              web3: web3,\r\n            })\r\n          );\r\n\r\n\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n\r\n          // Add listeners end\r\n        }\r\n        else {\r\n          let userchain = CONFIG.NETWORK.ID;\r\n          let CHID = Web3.utils.toHex(userchain.toString());\r\n          try {\r\n            await ethereum.request({\r\n              method: 'wallet_switchEthereumChain',\r\n              params: [{ chainId: CHID }],\r\n            });\r\n          } catch (switchError) {\r\n            // This error code indicates that the chain has not been added to MetaMask.\r\n            if (switchError.code === 4902) {\r\n              dispatch(connectFailed(`Please Add ${CONFIG.NETWORK.NAME} Network to your Metamask.`));\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n      \r\n      \r\n      catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    } \r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: #fff;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const AmountContainer = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: center;\r\n  justify-content: center;\r\n  align-items: center;\r\n  //border: 2px solid #A673EF;\r\n  border-radius: 10px;\r\n  //box-shadow: 0px 0px 3px 0px #A673EF;\r\n`;\r\n\r\n\r\nexport const TextTitle = styled.p`\r\n  font-family: 'Kemco';\r\n  color: var(--primary-text);\r\n  font-size: 60px;\r\n  font-weight: 400;\r\n  letter-spacing: 8px;\r\n  line-height: 1.6;\r\n  text-align: center;\r\n  @media (max-width: 565px) {\r\n    font-size: 25px;\r\n    text-align: center;\r\n    letter-spacing: 2px;\r\n  }\r\n`;\r\n\r\nexport const TextSub = styled.p`\r\n  font-family: 'Kemco';\r\n  color: var(--primary-text);\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n  letter-spacing: 8px;\r\n  line-height: 1.6;\r\n  @media (max-width: 565px) {\r\n    font-size: 20px;\r\n    letter-spacing: 2px;\r\n  }\r\n`;\r\n\r\nexport const TextTotal = styled.p`\r\n  font-family: 'Kemco';\r\n  color: var(--primary-text);\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  letter-spacing: 2px;\r\n  line-height: 1.6;\r\n  @media (max-width: 565px) {\r\n    font-size: 0.75rem;\r\n    letter-spacing: 2px;\r\n  }\r\n`;\r\n\r\nexport const TextPrice = styled.p`\r\n  font-family: 'Kemco';\r\n  color: white;\r\n  font-size: 3rem;\r\n  font-weight: bold;\r\n  letter-spacing: 8px;\r\n  line-height: 1.6;\r\n  border: 2px solid midnightblue;\r\n  width: 400px;\r\n  background: #9DC5F0;\r\n  text-align: center;\r\n  @media (max-width: 565px) {\r\n    font-size: 20px;\r\n    letter-spacing: 2px;\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  font-family: 'Kemco';\r\n  color: var(--primary-text);\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  line-height: 1.6;\r\n  @media (max-width: 565px) {\r\n    font-size: 0.75rem;\r\n    letter-spacing: 2px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 60px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TEXTamount = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 30px;\r\n  line-height: 1.6;\r\n  @media (max-width: 565px) {\r\n    font-size: 20px;\r\n    line-height: 0;\r\n  }\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nexport const StyledHR = styled.hr`\r\n  border: 2px solid white;  \r\n  background-color: white;\r\n  border-radius: 2px;\r\n  width: 450px;\r\n  @media (max-width: 565px) {\r\n    width: 350px;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--primary-text);\r\n  text-decoration: none;\r\n  margin-right: 5rem;\r\n  cursor: pointer;\r\n  :hover {\r\n    color: #FF8938;\r\n  }\r\n  @media (max-width: 565px) {\r\n    margin-right: 0.75rem;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.img`\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    margin-right: 1.2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    :hover {\r\n      transform: scale(1.5);\r\n      transition: transform 0.5s;\r\n    }\r\n`;\r\n\r\nexport const HeaderDiv = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-right: 3.5rem;\r\n@media (max-width: 565px) {\r\n  margin-right: 0;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  flex-direction: column;\r\n}\r\n`;\r\n\r\nexport const socialDiv = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n@media (max-width: 565px) {\r\n  margin-right: 0;\r\n  margin-top: 20px;\r\n  flex-direction: row;\r\n}\r\n`;\r\n\r\nexport const Headerlinks = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    @media (max-width: 565px) {\r\n      margin-top: 10px;\r\n      margin-bottom: 10px;\r\n    }\r\n`;\r\n\r\nexport const SecContainer = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: center;;\r\n  align-items: center;\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  margin-top: 5%;\r\n`;\r\n\r\nexport const TextP = styled.p`\r\ntext-align: center;\r\nfont-size: 1rem;\r\nletter-spacing: 1px;\r\nline-height: 2;\r\nwidth: 70%;\r\n`;\r\n\r\nexport const ExploreBTN = styled.button`\r\n  font-family: 'Kemco';\r\n  padding: 10px;\r\n  font-size: 1rem;\r\n  border-radius: 40px;\r\n  border: none;\r\n  background: linear-gradient(86.57deg, #C500DD 6.92%, rgba(255, 92, 0, 0.79) 100.73%);\r\n  padding: 10px;\r\n  letter-spacing: 2px;\r\n  font-weight: bold;\r\n  color: white;\r\n  width: 270px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    color: black;\r\n  }\r\n  @media (max-width: 565px) {\r\n    width: 200px;\r\n    height: 50px;\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport const imgContainer = styled.div`\r\n  display: flex;\r\n  background: #171717;\r\n  border-radius: 40px;\r\n  width: max-content;\r\n  margin-top: 5%;\r\n  align-items: center;\r\n    justify-content: center;\r\n    @media (max-width: 565px) {\r\n      width: 100%;\r\n    }\r\n`;\r\n\r\nexport const workContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 5%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  gap: 5%;\r\n  @media (max-width: 565px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Box = styled.div`\r\nheight: 120px;\r\nwidth: 250px;\r\nborder-radius: 20px;\r\nbackground: #171717;\r\npadding: 10px;\r\n@media (max-width: 565px) {\r\n  margin-top: 10px;\r\n}\r\n:hover {\r\n  transform: scale(1.2);\r\n}\r\n\r\n`;\r\n\r\nexport const innerbox = styled.div`\r\n    flex-direction: row;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-content: center;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const innerIcons = styled.img`\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 50%;\r\n    margin-right: 1.2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const TextPBOX = styled.p`\r\ntext-align: left;\r\nwidth: 125px;\r\nfont-size: 1rem;\r\n`;\r\n\r\nexport const Textbox = styled.p`\r\ntext-align: left;\r\nfont-size: 0.75rem;\r\n`;\r\n\r\nexport const CBOX = styled.div`\r\nwidth: 30%;\r\n@media (max-width: 565px) {\r\n  width: 80%;\r\n}\r\n`;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport Web3 from \"web3\";\r\nimport 'rsuite/styles/index.less';\r\nimport \"rsuite/dist/rsuite.min.css\";\r\nimport { Panel, PanelGroup } from 'rsuite';\r\nimport { Carousel } from 'rsuite';\r\nimport { Notification, toaster } from 'rsuite';\r\nimport { Loader } from 'rsuite';\r\nimport { Badge } from 'rsuite';\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  font-family: 'coder';\r\n  padding: 10px;\r\n  font-size: 1rem;\r\n  border-radius: 6px;\r\n  border: none;\r\n  background-color: black;\r\n  padding: 10px;\r\n  letter-spacing: 2px;\r\n  font-weight: bold;\r\n  color: white;\r\n  width: 270px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px black;\r\n  -webkit-box-shadow: 0px 6px 0px -2px black;\r\n  -moz-box-shadow: 0px 6px 0px -2px black;\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    color: silver;\r\n  }\r\n  @media (max-width: 565px) {\r\n    width: 200px;\r\n    height: 50px;\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport const CTNButton = styled.button`\r\n  font-family: 'coder';\r\n  padding: 10px;\r\n  font-size: 1rem;\r\n  border-radius: 6px;\r\n  border: none;\r\n  background-color: black;\r\n  padding: 10px;\r\n  letter-spacing: 2px;\r\n  font-weight: bold;\r\n  color: white;\r\n  width: 270px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px black;\r\n  -webkit-box-shadow: 0px 6px 0px -2px black;\r\n  -moz-box-shadow: 0px 6px 0px -2px black;\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    color: silver;\r\n  }\r\n  @media (max-width: 565px) {\r\n    width: 200px;\r\n    height: 50px;\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport const Maxbtn = styled.button`\r\n  font-family: 'coder';\r\n  font-size: 0.75rem;\r\n  border-radius: 10px;\r\n  background-color: #fe8401;\r\n  font-weight: bold;\r\n  color: white;\r\n  width: 80px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  letter-spacing: 2px;\r\n  :hover {\r\n    color: black;\r\n  }\r\n  @media (max-width: 565px) {\r\n    width: 200px;\r\n    height: 50px;\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  border: none;\r\n  background-color: transparent;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 30px;\r\n  color: white;\r\n  width: 40px;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    color: silver;\r\n  }\r\n`;\r\n\r\nexport const LogoDiv = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nalign-content: center;\r\ngap: 10%;\r\nwidth: 300px;\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 70%;\r\n  border: 2px solid white;\r\n  border-radius: 40px;\r\n  background: linear-gradient(90deg, rgba(120, 48, 182, 1) 30%, rgba(155, 90, 211, 1) 93%);\r\n    @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapperHeader = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-height: 80px;\r\n  padding: 10px;\r\n  background-color : #f29b46;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n  @media (max-width: 565px) {\r\n    max-height: 220px;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  display: inline;\r\n  width: 200px;\r\n  @media (max-width: 767px) {\r\n    width: 150px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 450px;\r\n  border-radius: 5px;\r\n  @media (min-width: 900px) {\r\n    width: 450px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 450px;\r\n  }\r\n  transition: width 0.5s;\r\n  @media (max-width: 565px) {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nexport const Styledroad = styled.img`\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledImgSmall = styled.img`\r\n  width: 220px;\r\n  height: 220px;\r\n  border-radius: 5px;\r\n  @media (min-width: 900px) {\r\n    width: 220px;\r\n    height: 220px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 220px;\r\n    height: 220px;\r\n  }\r\n  transition: width 0.5s;\r\n  @media (max-width: 565px) {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const WalletBox = styled.div`\r\n  text-decoration: none;\r\n  border-radius: 10px;\r\n  border: 2px solid white;\r\n  background-color: transparent;\r\n  //padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  width: 180px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px white;\r\n  -webkit-box-shadow: 0px 4px 0px -2px white;\r\n  -moz-box-shadow: 0px 4px 0px -2px white;\r\n  @media (max-width: 565px) {\r\n    margin-top: 20px;\r\n  \r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [walletAddress, setAddress] = useState(\"Not Connected\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(``);\r\n  const [tokens, settokens] = useState(1);\r\n  const [brd, setbrd] = useState(\"2px solid #FFFFFF\");\r\n  const [bxsh, setbxsh] = useState(\"0px 0px 3px 0px #FFFFFF\");\r\n  const [DOT, setDOT] = useState(\"red\");\r\n  const [type, setType] = React.useState('info');\r\n  const [placement, setPlacement] = React.useState('topStart');\r\n  const errmessage = (\r\n    <Notification type={'error'} header={'error'} closable>\r\n     Sorry, something went wrong please try again later.\r\n    </Notification>\r\n  );\r\n  const txmessage = (\r\n    <Notification type={'success'} header={'success'} closable>\r\n     Congrats, Mint Was successfull.\r\n    </Notification>\r\n  );\r\n  const mntmessage = (\r\n    <Notification type={'info'} header={'success'} closable>\r\n     <Loader/> Minting in Progress....\r\n    </Notification>\r\n  );\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    DISPLAY_COST: 0,\r\n    WL_Display: 0,\r\n    GAS_LIMIT: 0,\r\n    MAX_PER_TX: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    Telegram: \"\",\r\n    Discord: \"\",\r\n    Twitter: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.DISPLAY_COST * tokens;\r\n    let price = Web3.utils.toWei(cost.toString(), 'ether');\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalGasLimit = String(gasLimit);\r\n    console.log(\"Cost: \", price);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    setbrd(\"2px solid yellow\");\r\n    setbxsh(\"0px 0px 3px 0px yellow\");\r\n    toaster.push(mntmessage, { placement })\r\n    blockchain.smartContract.methods\r\n      .mint(tokens)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: price,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n        toaster.push(errmessage, { placement })\r\n        setbrd(\"2px solid red\");\r\n        setbxsh(\"0px 0px 3px 0px red\");\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Mantra to view it.`\r\n        );\r\n        toaster.push(txmessage, { placement })\r\n        setbrd(\"2px solid green\");\r\n        setbxsh(\"0px 0px 3px 0px green\");\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementtokens = () => {\r\n    let newtokens = tokens - 1;\r\n    if (newtokens < 1) {\r\n      newtokens = 1;\r\n    }\r\n    settokens(newtokens);\r\n  };\r\n\r\n  const incrementtokens = () => {\r\n    let newtokens = tokens + 1;\r\n    if (newtokens > CONFIG.MAX_PER_TX) {\r\n      newtokens = CONFIG.MAX_PER_TX;\r\n    }\r\n    settokens(newtokens);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n      setAddress(blockchain.account.substring(0,4) + \"...\" + blockchain.account.substring(38,42));\r\n      setDOT(\"green\");\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        // ai={\"center\"}\r\n        style={{backgroundColor: \"#7a1fc8\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\r\n      >\r\n        <ResponsiveWrapperHeader>\r\n\r\n          <LogoDiv>\r\n          <a href=\"#\" target={\"_blank\"}>\r\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\r\n          </a>\r\n          </LogoDiv>\r\n\r\n          <s.Headerlinks>\r\n            <s.StyledLink href=\"#story\">\r\n              About\r\n            </s.StyledLink >\r\n            <s.StyledLink href=\"#sneak\">\r\n               Sneak Peaks\r\n              </s.StyledLink>\r\n              <s.StyledLink href=\"#faq\">\r\n               FAQ\r\n              </s.StyledLink>\r\n          </s.Headerlinks>\r\n\r\n\r\n\r\n          <s.HeaderDiv>\r\n          <s.socialDiv>\r\n          <a href={CONFIG.Telegram} target={\"_blank\"}>\r\n          <s.Icons src=\"/config/images/telegram.svg\" alt=\"telegram\" />\r\n          </a>\r\n            <a href={CONFIG.Twitter} target={\"_blank\"}>\r\n          <s.Icons src=\"/config/images/twitter.svg\" alt=\"twitter\" />\r\n          </a>\r\n          </s.socialDiv>\r\n          <WalletBox>\r\n            {blockchain.account !== \"\" ? (\r\n            <>\r\n            <s.TextSubTitle style={{fontSize: \"1rem\", color: \"white\"}}>\r\n            <Badge color={DOT}/> {walletAddress}\r\n              </s.TextSubTitle>\r\n            </>\r\n            ) : null }\r\n          </WalletBox>\r\n          </s.HeaderDiv>\r\n\r\n        </ResponsiveWrapperHeader>\r\n        <s.SpacerLarge/>\r\n\r\n        <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n          <s.TextTitle>\r\n            Mint Your Doge Ape\r\n          </s.TextTitle>\r\n\r\n        </s.Container>\r\n    \r\n        <s.SpacerSmall />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n        <StyledImg src={\"/config/images/11.png\"} alt=\"image\" />\r\n        <s.SpacerSmall/>\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"} >\r\n\r\n\r\n           {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextSub\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", fontFamily: \"coder\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextSub>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", fontFamily: \"coder\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextSub\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", fontFamily: \"coder\"  }}\r\n                >\r\n        \r\n                  {data.totalSupply} | {CONFIG.MAX_SUPPLY}\r\n                </s.TextSub>\r\n                <s.SpacerSmall />\r\n                <s.TextTotal style={{background: \"white\" , borderRadius: 5, padding: 8, color: \"black\"}}>\r\n                      Price&emsp;&emsp;&emsp;&emsp;&emsp;{CONFIG.DISPLAY_COST}{\" \"}{CONFIG.NETWORK.SYMBOL}\r\n                    </s.TextTotal>\r\n                <s.SpacerMedium/>\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <>\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.SpacerSmall />\r\n                    <CTNButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      Connect to Metamask\r\n                      <img style={{width: 30, paddingLeft: 10 }} src={\"/config/images/mm.svg\"} />\r\n                    </CTNButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                            fontFamily: \"coder\",\r\n                            fontSize: 20\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <s.AmountContainer style={{\r\n                      border: brd,\r\n                      boxShadow: bxsh,\r\n                    }}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementtokens();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.TEXTamount>\r\n                        &ensp;&ensp;&ensp;&ensp;{tokens}&ensp;&ensp;&ensp;&ensp;\r\n                      </s.TEXTamount>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementtokens();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.AmountContainer>\r\n                    <s.SpacerSmall />\r\n                    <Maxbtn\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          settokens(CONFIG.MAX_PER_TX);\r\n                        }}\r\n                        >\r\n                      SetMax\r\n                    </Maxbtn>\r\n                    <s.SpacerSmall />\r\n                    <s.SpacerSmall />\r\n                    <s.TextTotal style={{color: \"black\"}}>\r\n                      Total&emsp;&emsp;&emsp;&emsp;&emsp;{(CONFIG.DISPLAY_COST * tokens).toString().substring(0, 6)}{\" \"}{CONFIG.NETWORK.SYMBOL}\r\n                    </s.TextTotal>\r\n                    <s.SpacerSmall />\r\n                    <s.SpacerXSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"column\"}>\r\n                            <StyledButton\r\n                            disabled={claimingNft ? 1 : 0}\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              claimNFTs();\r\n                              getData();\r\n                            }}\r\n                          >\r\n                            {claimingNft ? <Loader speed=\"fast\" content=\"Minting...\" /> : \"MINT\"} \r\n                          </StyledButton>\r\n                    </s.Container>\r\n                    <s.SpacerXSmall/>\r\n                    <s.TextSubTitle style={{fontSize: 15}}>\r\n                    Max {CONFIG.MAX_PER_TX} Per Tx\r\n                    </s.TextSubTitle>\r\n                    <s.SpacerXSmall/>\r\n                    <s.TextSubTitle style={{textAlign: \"center\", fontSize: \"1rem\"}}>\r\n                    {feedback}\r\n                    </s.TextSubTitle>\r\n              </>\r\n            )}\r\n            </>\r\n            )}\r\n            <s.SpacerMedium />\r\n            </s.Container>\r\n          <s.SpacerLarge />\r\n        </ResponsiveWrapper>\r\n\r\n\r\n        <s.SpacerLarge />\r\n        <s.SecContainer id=\"story\">\r\n        <s.TextTitle>\r\n            ABOUT DOGE APE CLUB\r\n            </s.TextTitle>\r\n            <s.SpacerLarge/>\r\n            <s.TextP>\r\n\r\n            The Doge Ape Club Original Collection is a new and exciting addition to the world of digital art and collectibles on the Dogechain. These unique and eye-catching pieces feature a combination of the beloved Doge meme and 10000 unique popular trend of collecting NFTs.\r\n<br></br><br></br>\r\nEach Doge Ape Club Original is a one-of-a-kind NFT that has been carefully crafted and designed by talented artist to capture the spirit of both the Doge meme and the emerging world of digital collectibles. These pieces are created using cutting-edge blockchain technology, ensuring that they are secure, transparent, and easily tradable.\r\n<br></br><br></br>\r\nBy owning a Doge Ape Club Original, collectors not only have a visually stunning and exclusive piece of digital art but also become part of a growing community of NFT enthusiasts. These pieces are not just static images, but also represent a unique cultural phenomenon that has captured the attention of people around the world.\r\nOverall, the Doge Ape Club Original Collection is an exciting and innovative addition to the Dogechain's digital collectibles ecosystem, and is sure to attract attention and appreciation from collectors and art enthusiasts alike.\r\n</s.TextP>\r\n            </s.SecContainer>\r\n\r\n            <s.SecContainer id=\"sneak\">\r\n            <s.TextTitle>\r\n            Sneak Peaks\r\n            </s.TextTitle>\r\n            <s.SpacerLarge/>\r\n            <s.CBOX>\r\n            <Carousel autoplay className=\"custom-slider\">\r\n    <img src=\"/config/images/1.jpg\" />\r\n    <img src=\"/config/images/2.jpg\" />\r\n    <img src=\"/config/images/3.jpg\" />\r\n    <img src=\"/config/images/4.jpg\" />\r\n    <img src=\"/config/images/5.jpg\" />\r\n  </Carousel>\r\n  </s.CBOX>\r\n              </s.SecContainer>\r\n\r\n              <s.SecContainer id=\"faq\">\r\n            <s.TextTitle>\r\n            FAQ\r\n            </s.TextTitle>\r\n            <s.SpacerLarge/>\r\n            <PanelGroup style={{width: \"80%\", borderColor: \"#A9D0D2\"}} accordion bordered>\r\n    <Panel header=\"How can I mint a DAC NFT?\" defaultExpanded>\r\n    <s.TextP style={{textAlign: \"left\"}}>\r\n    Only on Dogechain with on DAC official website or the Mantra marketplace, you have the ability to mint your DAC NFTs and participate in both the selling and buying processes. Additionally, there is an option to engage in the after-market transactions.\r\n          </s.TextP>\r\n    </Panel>\r\n    <Panel header=\"What is the price?\">\r\n    <s.TextP style={{textAlign: \"left\"}}>\r\n    The initial 500 mints will be available at zero cost, with only the gas fee to be paid. Each wallet can mint up to three free mints. Once all the 500 free mints are minted, the price will be set at 25 wdoge, and each wallet will be lifted to a maximum of 250 mints.\r\n          </s.TextP>\r\n    </Panel>\r\n    <Panel header=\"Is this original artwork?\">\r\n    <s.TextP style={{textAlign: \"left\"}}>\r\n    Doge Ape Club is an offshoot of the Bored Ape Yacht Club (BAYC) but without any trait combinations that match those of the Ethereum apes. Doge Ape Club NFT is meticulously hand-painted, showcasing a distinct theme inspired by Dogechain and incorporating elements from beloved projects in the DC crypto community.\r\n          </s.TextP>\r\n    </Panel>\r\n    <Panel header=\"What is the maximum supply?\">\r\n    <s.TextP style={{textAlign: \"left\"}}>\r\n    10000 is the total supply.\r\n          </s.TextP>\r\n    </Panel>\r\n    <Panel header=\"Why Dogechain?\">\r\n    <s.TextP style={{textAlign: \"left\"}}>\r\n    We choose Dogechain due to its promising future, utility for Dogecoin, low gas fees, and strong community support.\r\n          </s.TextP>\r\n    </Panel>\r\n  </PanelGroup>\r\n            </s.SecContainer>\r\n\r\n\r\n\r\n            <s.SecContainer id=\"\">\r\n                <s.socialDiv>\r\n          <a href={CONFIG.Telegram} target={\"_blank\"}>\r\n          <s.Icons src=\"/config/images/telegram.svg\" alt=\"telegram\" />\r\n          </a>\r\n            <a href={CONFIG.Twitter} target={\"_blank\"}>\r\n          <s.Icons src=\"/config/images/twitter.svg\" alt=\"twitter\" />\r\n          </a>\r\n          </s.socialDiv>\r\n          <LogoDiv>\r\n          <a href=\"https://explorer.dogechain.dog/address/0x58f2FEA3D66025cdEdBc37B5bcd93647d76D7325\" target={\"_blank\"}>\r\n            <StyledLogo alt={\"logo\"} src={\"/config/images/contract.png\"} />\r\n          </a>\r\n          </LogoDiv>\r\n          <s.SpacerLarge/>\r\n          <LogoDiv>\r\n          <a href=\"https://t.me/dogeapeclub\" target={\"_blank\"}>\r\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\r\n          </a>\r\n          </LogoDiv>\r\n          <s.SpacerLarge/>\r\n          <s.TextP>\r\n          2023 {CONFIG.NFT_NAME}\r\n          </s.TextP>\r\n            </s.SecContainer>\r\n        <s.SpacerMedium />\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  font-family: 'Upheaval';\r\n  padding: 10px;\r\n  font-size: 24px;\r\n  border-radius: 6px;\r\n  border: none;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  letter-spacing: 6px;\r\n  // font-weight: bold;\r\n  color: #7167E3;\r\n  width: 450px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  border: none;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  // font-weight: bold;\r\n  font-size: 50px;\r\n  color: #7167E3;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  // margin: auto;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapperHeader = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  display: inline;\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  // border: 4px dashed var(--secondary);\r\n  // background-color: var(--accent);\r\n  // border-radius: 100%;\r\n  width: 300px;\r\n  @media (min-width: 900px) {\r\n    width: 350px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 400px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const WalletBox = styled.div`\r\n  text-decoration: none;\r\n  border-radius: 10px;\r\n  border: 2px solid white;\r\n  background-color: #7167E3;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  width: 250px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n`;\r\n\r\nfunction Second() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [walletAddress, setAddress] = useState(\"No connection\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    WEB_LINK: \"\",\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 50) {\r\n      newMintAmount = 50;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n      setAddress(blockchain.account.substring(0,4) + \"...\" + blockchain.account.substring(38,42));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        // ai={\"center\"}\r\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg_minting.png\" : null}\r\n      >\r\n        <ResponsiveWrapperHeader>\r\n          <a href={CONFIG.WEB_LINK}>\r\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo_minting.png\"} />\r\n          </a>\r\n          <WalletBox>\r\n            {blockchain.account !== \"\" ? (\r\n            <>\r\n            <s.TextSubTitle>\r\n              {walletAddress}\r\n              </s.TextSubTitle>\r\n            </>\r\n            ) : null }\r\n          </WalletBox>\r\n        </ResponsiveWrapperHeader>\r\n\r\n        <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n          <s.TextTitle> PUBLIC SALE </s.TextTitle>\r\n        </s.Container>\r\n    \r\n        <s.SpacerSmall />\r\n\r\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n            \r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n              <StyledImg alt={\"Gadjah with the duck\"} src={\"/config/images/unr_nft.png\"} />\r\n            </s.Container>\r\n            {/* <s.SpacerLarge /> */}\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"} >\r\n            <s.StyledHR></s.StyledHR>\r\n            <s.SpacerSmall />\r\n            {/* <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 50,\r\n                fontWeight: \"bold\",\r\n                color: \"var(--accent-text)\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle> */}\r\n            {/* <s.TextDescription\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"var(--primary-text)\",\r\n              }}\r\n            >\r\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\r\n              </StyledLink>\r\n            </s.TextDescription> */}\r\n            {/* <span\r\n              style={{\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <StyledButton\r\n                onClick={(e) => {\r\n                  window.open(\"/config/roadmap.pdf\", \"_blank\");\r\n                }}\r\n                style={{\r\n                  margin: \"5px\",\r\n                }}\r\n              >\r\n                Roadmap\r\n              </StyledButton>\r\n              <StyledButton\r\n                style={{\r\n                  margin: \"5px\",\r\n                }}\r\n                onClick={(e) => {\r\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\r\n                }}\r\n              >\r\n                {CONFIG.MARKETPLACE}\r\n              </StyledButton>\r\n            </span> */}\r\n            {/* <s.SpacerSmall /> */}\r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextSub\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextSub>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextSub\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\",  }}\r\n                >\r\n                  Price&emsp;&emsp;&emsp;&emsp;&emsp;{CONFIG.DISPLAY_COST}{\" \"}{CONFIG.NETWORK.SYMBOL}\r\n                </s.TextSub>\r\n                <s.SpacerSmall />\r\n                <s.StyledHR></s.StyledHR>\r\n                <s.SpacerXSmall />\r\n                {/* <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  Excluding gas fees.\r\n                </s.TextDescription> */}\r\n                <s.SpacerSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        color: \"var(--accent-text)\",\r\n                      }}\r\n                    >\r\n                      {/* Connect to the {CONFIG.NETWORK.NAME} network                       */}\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT TO METAMASK\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          fontFamily : \"Upheaval\",\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        &ensp;&ensp;&ensp;&ensp;{mintAmount}&ensp;&ensp;&ensp;&ensp;\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                    </s.Container>\r\n                    <s.SpacerSmall />\r\n                    <s.StyledHR ></s.StyledHR>\r\n                    <s.SpacerSmall />\r\n                    <s.TextSub\r\n                      style={{ textAlign: \"center\", color: \"var(--accent-text)\",  }}\r\n                    >\r\n                      Total&emsp;&emsp;&emsp;&emsp;&emsp;{CONFIG.DISPLAY_COST * mintAmount}{\" \"}{CONFIG.NETWORK.SYMBOL}\r\n                    </s.TextSub>\r\n                    <s.SpacerSmall />\r\n                    <s.SpacerXSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"MINTING...\" : \"MINT NOW\"}\r\n                      </StyledButton>\r\n                    </s.Container>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <s.SpacerMedium />\r\n            </s.Container>\r\n          <s.SpacerLarge />\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default Second;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/RenoMono.8b239c68.otf\";","export default __webpack_public_path__ + \"static/media/upheavtt.c501e16f.ttf\";","import { createGlobalStyle } from 'styled-components'\r\nimport RenoMono from './fonts/RenoMono.otf'\r\nimport Upheaval from './fonts/upheavtt.ttf';\r\n// import Gumball from './Gumball.ttf';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'Upheaval';\r\n        src: url(${Upheaval}) format('truetype');\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Renomono';\r\n        src: url(${RenoMono}) format('opentype');\r\n    }\r\n`;\r\n\r\n// export const Renomono = createGlobalStyle`\r\n//     @font-face {\r\n//         font-family: 'Renomono';\r\n//         src: url(${RenoMono}) format('opentype');\r\n//     }\r\n// `;\r\n\r\nexport default GlobalStyle;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport Second from \"./second\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport GlobalStyle from \"./fonts\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <GlobalStyle />\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}